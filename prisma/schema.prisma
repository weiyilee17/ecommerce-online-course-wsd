// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Product {
  id                     String                 @id @default(uuid())
  name                   String                 @db.Text
  priceInCents           Int
  filePath               String                 @db.Text
  imagePath              String                 @db.Text
  description            String                 @db.Text
  isAvailableForPurchase Boolean                @default(true)
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @updatedAt
  orders                 Order[]
  downloadVerifications  DownloadVerification[]

  discountCodes DiscountCode[]
}

model User {
  id                    String                 @id @default(uuid())
  email                 String                 @unique @db.VarChar(255)
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  orders                Order[]
  downloadVerifications DownloadVerification[]
}

model Order {
  id               String   @id @default(uuid())
  pricePaidInCents Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  userId    String
  // When deleting user, deletes all of his orders
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  productId String
  // When deleting product, if it has orders, don't allow deleting the product, so the user can still download their products
  product   Product @relation(fields: [productId], references: [id], onDelete: Restrict)

  discountCodeId String?
  // When deleting discountCode, can't do so if there is order using it
  discountCode   DiscountCode? @relation(fields: [discountCodeId], references: [id], onDelete: Restrict)
}

model DownloadVerification {
  id        String   @id @default(uuid())
  expiresAt DateTime
  createdAt DateTime @default(now())

  productId String
  // When product is deleted, download links are also deleted
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  userId    String?
  User      User?   @relation(fields: [userId], references: [id])
}

model DiscountCode {
  id             String           @id @default(uuid())
  code           String           @unique
  discountAmount Int
  discountType   DiscountCodeType
  uses           Int              @default(0)
  isActive       Boolean          @default(true)
  allProducts    Boolean          @default(false)
  createdAt      DateTime         @default(now())
  limit          Int?
  expiresAt      DateTime?

  products Product[]
  orders   Order[]
}

enum DiscountCodeType {
  PERCENTAGE
  FIXED
}
